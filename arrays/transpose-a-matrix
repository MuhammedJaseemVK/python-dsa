# Transpose of a Matrix

# Bruteforce
```py
matrix = [[1,2,3],[4,5,6],[7,8,9],[10,11,12]]
m = len(matrix)
n = len(matrix[0])

transponse = []

for i in range(n):
    row = []
    for j in range(m):
        row.append(matrix[j][i])
    transponse.append(row)

for i in range(n):
    for j in range(m):
        print(transponse[i][j],end=',')
    print()
```
TC - O(m*n)
SC - O(m*n)

# In place transponse (only possible for square matrix)
```py
# in place transpose becomes possible for square matrices only
matrix = [[1,2,3],[4,5,6],[7,8,9]]
n = len(matrix)

for i in range(n):
    for j in range(i+1,n): #traversing only upper right triangle
        temp = matrix[i][j]
        matrix[i][j] = matrix[j][i]
        matrix[j][i] = temp

for i in range(n):
    for j in range(n):
        print(matrix[i][j],end=',')
    print()
```
TC - O(n^2)
SC - O(1)

