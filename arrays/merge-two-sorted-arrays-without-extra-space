# Merge two Sorted Arrays Without Extra Space

# Bruteforce
```py
arr1 = [1, 4, 8, 10] 
arr2 = [2, 3 ,9]

n = len(arr1)
m = len(arr2)

left = 0
right = 0
index = 0

result = [0] * (n+m) #uses extra space

while left<n and right<m:
    if arr1[left] < arr2[right]:
        result[index] = arr1[left]
        left+=1
        index+=1
    else:
        result[index] = arr2[right]
        right+=1
        index+=1

while left<n:
    result[index] = arr1[left]
    left+=1
    index+=1

while right<m:
    result[index] = arr2[right]
    right+=1
    index+=1

for i in range(n):
    arr1[i] = result[i]
for i in range(m):
    arr2[i] = result[n+i]

print(arr1)
print(arr2)
```
SC - O(n+m) + O(n+m)
TC - O(n+m)

# Optimal 1
```py
arr1 = [1, 4, 8, 10] 
arr2 = [2, 3 ,9]

n = len(arr1)
m = len(arr2)

left = m-1
right = 0

while left >= 0 and right < m:
    if arr1[left] > arr2[right]:
        arr1[left], arr2[right] = arr2[right], arr1[left]
        left -= 1
        right += 1
    else:
        break


arr1.sort()
arr2.sort()

print(arr1)
print(arr2)
```
TC - O(min(n, m)) + O(n*logn) + O(m*logm)
SC - O(1)
