# Rearrange Array Elements by Sign (no of positives and negatives are equal)

# bruteforce
```py
nums = [1,2,-4,-5]
n = len(nums)

positives = []
negatives = []

for i in range(n):
    if nums[i] >= 0:
        positives.append(nums[i])
    else:
        negatives.append(nums[i])

for i in range(n//2):
    if i%2 == 0:
        nums[2*i] = positives[i]
    else:
        nums[2*i+1] = negatives[i]   

print(nums)
```
# TC - O(N) + O(N/2)
# SC - O(N)

# better bruteforce <not inplace replacement>
```py
nums = [1,2,-4,-5]
n = len(nums)

result = [0] * n
posIndex = 0
negIndex = 1

for i in range(n):
    if nums[i] >= 0 :
        result[posIndex] = nums[i]
        posIndex += 2
    else:
        result[negIndex] = nums[i]
        negIndex +=2


print(result)
```
# TC - O(N)
# SC - O(N)

# Rearrange Array Elements by Sign (no of positives and negatives are not equal)

```py
# rearrange-array-elements-by-sign (not equal number of positives and negatives)

nums = [1,2,-4,-5,3,4]
n = len(nums)

# brute force
positives = []
negatives = []

for i in range(n):
    if nums[i] >= 0 :
        positives.append(nums[i])
    else:
        negatives.append(nums[i])

min_count = min(len(positives),len(negatives))

for i in range(2*min_count):
    if i %2 == 0:
        nums[i] = positives[i//2]
    else:
        nums[i] = negatives[i//2]

if len(positives) > len(negatives):
    for i in range(len(positives)-len(negatives)):
        nums[2*min_count+i] = positives[min_count+i]
if len(positives) < len(negatives):
    for i in range(len(negatives)-len(positives)):
        nums[2*min_count+i] =negatives[min_count+i]

print(nums)
```
# TC - O(N+N+N)
# SC - O(N)
