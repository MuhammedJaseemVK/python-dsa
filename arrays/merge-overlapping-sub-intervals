# Merge Overlapping Sub-intervals
# Bruteforce

```py
intervals = [[1,3],[2,6],[8,9],[9,11],[8,10],[2,4],[15,18],[16,17]]

intervals.sort()
answer = []

n = len(intervals)

for i in range(n):
    start = intervals[i][0]
    end = intervals[i][1]
    if len(answer) !=0 and end<=answer[-1][1]: # skip merged intervals
        continue
    for j in range(i+1,n):
        if intervals[j][0] <= end:
            end = max(intervals[j][1],end)
        else:
            break
    answer.append([start,end])

    print(answer)
```
TC - O(NlogN) + O(2N)
SC - O(1)

# Optimized
```py
intervals = [[1,3],[2,6],[8,9],[9,11],[8,10],[2,4],[15,18],[16,17]]

intervals.sort()
answer = []
n = len(intervals)

for i in range(n):
    if len(answer)!= 0 and intervals[i][0] <= answer[-1][1]:
        answer[-1][1] = max(intervals[i][1],answer[-1][1])
    else:
        answer.append(intervals[i])

print(answer)
```
TC - O(NlogN) + O(N)
SC - O(1)
