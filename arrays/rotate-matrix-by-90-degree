# Rotate Image by 90 degree (clockwise)

# Bruteforce
```py
matrix = [[1,2,3],[4,5,6],[7,8,9],[10,11,12]]
m = len(matrix)
n = len(matrix[0])

rotated_matrix = [[0] * m for _ in range(n)]

for i in range(m):
    for j in range(n):
        rotated_matrix[j][m-1-i] = matrix[i][j]

for i in range(n):
    for j in range(m):
        print(rotated_matrix[i][j],end=',')
    print()
```
TC - O(m*n)
SC - O(m*n)

# Optimized (only for sqaure matrix)
```py
matrix = [[1,2,3],[4,5,6],[7,8,9]]
n = len(matrix)

# finding inplace transpose
for i in range(n):
    for j in range(i+1,n):
        temp = matrix[i][j]
        matrix[i][j] = matrix[j][i]
        matrix[j][i] = temp

# reversing rows
for i in range(n):
    for j in range(n//2):
        temp = matrix[i][j]
        matrix[i][j] = matrix[i][n-1-j]
        matrix[i][n-1-j] = temp

for i in range(n):
    for j in range(n):
        print(matrix[i][j],end=',')
    print()
```
TC - O(n^2)+O(n^2)
SC - O(1)
